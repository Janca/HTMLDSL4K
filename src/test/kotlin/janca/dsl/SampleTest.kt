package janca.dsl

import janca.dsl.html.HTMLString
import janca.dsl.html.element.doctype
import janca.dsl.html.element.htmlTemplate
import java.awt.Desktop
import java.io.File
import java.io.FileWriter

fun main(vararg args: String) {
    HTMLString(
            htmlTemplate {
                li {
                    a("This is a test link", "#", "text-primary")
                }
            }
    ).also { println(it) }

    HTMLString(
            doctype("html") {
                html {
                    head {
                        title("HTMLDSL4K")

                        meta {
                            this["name"] = "viewport"
                            this["content"] = "width=device-width,initial-scale=1.0"
                        }

                        link("https://cdnjs.cloudflare.com/ajax/libs/spectre.css/0.5.1/spectre.min.css")
                        link("https://cdnjs.cloudflare.com/ajax/libs/spectre.css/0.5.1/spectre-icons.min.css")
                        link("https://cdnjs.cloudflare.com/ajax/libs/spectre.css/0.5.1/spectre-exp.min.css")

                        script {
                            this["type"] = "application/javascript"
                            text("""function testAlert() {
                            |   window.alert("Hello world");
                            |}""".trimMargin())
                        }
                    }

                    body {
                        setStyle("margin:1.25rem 2rem;")
                        h1("HTMLDSL4K Sample Output")
                        p {
                            text("This page showcases sample output generated by the HTMLDSL4K library. Although a lot of work ahead ")
                            text("this library can be of more than adequate use to generate either dynamic or static HTML.")
                            br()
                            text("HTMLDSL4K supports most every single element in the HTML5 specification, as well as a few deprecated elements for your legacy sites.")
                        }

                        span("Here are some other useful features of HTMLDSL4K, most of these features are a WIP and are incomplete.")
                        ul {
                            li {
                                span("Element lambdas will only allow you to add elements that are allowed within that element.")
                            }

                            li {
                                span {
                                    text("Attributes relevant to an element will be available as a field in that element. For example, ")
                                    code("href")
                                    text(" is available for the AnchorElement but not available by field in the ImageElement, although if desired, and with any attribute, it can be set with ")
                                    code("setAttribute(\"href\",&nbsp;\"your&nbsp;attribute&nbsp;value\")")
                                    text(".")
                                }
                            }

                            li {
                                span("Easily extend this library with your own elements using Kotlin extension functions and the library's attribute and element providers.")
                            }

                            li {
                                span("Use HTMLDSL4K template function for generating blocks of elements to be passed as a single template block.")
                            }
                        }

                        span {
                            text("It can even do onclick attributes with scripts embedded in the page. ")
                            a(className = "text-primary") {
                                text("Like so")

                                this.href = "#"
                                this["onclick"] = "testAlert();"
                            }
                            text(".")
                        }

                        p("There is more to come so stay tuned!!")
                        h3("Here is the code used to generate this page:")
                        pre("code") {
                            code {
                                text("""
                            html("html") {
                                head {
                                    title("HTMLDSL4K")

                                    meta {
                                        this["name"] = "viewport"
                                        this["content"] = "width=device-width,initial-scale=1.0"
                                    }

                                    link("https://cdnjs.cloudflare.com/ajax/libs/spectre.css/0.5.1/spectre.min.css")
                                    link("https://cdnjs.cloudflare.com/ajax/libs/spectre.css/0.5.1/spectre-icons.min.css")
                                    link("https://cdnjs.cloudflare.com/ajax/libs/spectre.css/0.5.1/spectre-exp.min.css")

                                    script {
                                        this["type"] = "application/javascript"
                                        text(""${'"'}function testAlert() {
                                            |   window.alert("Hello world");
                                            |}""${'"'}.trimMargin())
                                    }
                                }

                                body {
                                    setStyle("margin:1.25rem 2rem;")
                                    h1("HTMLDSL4K Sample Output")
                                    p {
                                        text("This page showcases sample output generated by the HTMLDSL4K library. Although a lot of work ahead ")
                                        text("this library can be of more than adequate use to generate either dynamic or static HTML.")
                                        br()
                                        text("HTMLDSL4K supports most every single element in the HTML5 specification, as well as a few deprecated elements for your legacy sites.")
                                    }

                                    span("Here are some other useful features of HTMLDSL4K, most of these features are a WIP and are incomplete.")
                                    ul {
                                        li {
                                            span("Element lambdas will only allow you to add elements that are allowed within that element.")
                                        }

                                        li {
                                            span {
                                                text("Attributes relevant to an element will be available as a field in that element. For example, ")
                                                code("href")
                                                text(" is available for the AnchorElement but not available by field in the ImageElement, although if desired, and with any attribute, it can be set with ")
                                                code("setAttribute(\"href\",&nbsp;\"your&nbsp;attribute&nbsp;value\")")
                                                text(".")
                                            }
                                        }

                                        li {
                                            span("Easily extend this library with your own elements using Kotlin extension functions and the library's attribute and element providers.")
                                        }

                                        li {
                                            span("Use HTMLDSL4K template function for generating blocks of elements to be passed as a single template block.")
                                        }
                                    }

                                    span {
                                        text("It can even do onclick attributes with scripts embedded in the page. ")
                                        a(className = "text-primary") {
                                            text("Like so")

                                            this.href = "#"
                                            this["onclick"] = "testAlert();"
                                        }
                                        text(".")
                                    }

                                    p("There is more to come so stay tuned!!")
                                    h3("Here is the code used to generate this page:")
                                    pre("code") {
                                        code {
                                            text(""${'"'}
                                            html("html") {
                                                head {
                                                    title("HTMLDSL4K")

                                                    meta {
                                                        this["name"] = "viewport"
                                                        this["content"] = "width=device-width,initial-scale=1.0"
                                                    }

                                                    link("https://cdnjs.cloudflare.com/ajax/libs/spectre.css/0.5.1/spectre.min.css")
                                                    link("https://cdnjs.cloudflare.com/ajax/libs/spectre.css/0.5.1/spectre-icons.min.css")
                                                    link("https://cdnjs.cloudflare.com/ajax/libs/spectre.css/0.5.1/spectre-exp.min.css")

                                                    script {
                                                        this["type"] = "application/javascript"
                                                        text(""${'"'}function testAlert() {
                                                            |   window.alert("Hello world");
                                                            |}""${'"'}.trimMargin())
                                                    }
                                                }

                                                body {
                                                    setStyle("margin:1.25rem 2rem;")
                                                    h1("HTMLDSL4K Sample Output")
                                                    p {
                                                        text("This page showcases sample output generated by the HTMLDSL4K library. Although a lot of work ahead ")
                                                        text("this library can be of more than adequate use to generate either dynamic or static HTML.")
                                                        br()
                                                        text("HTMLDSL4K supports most every single element in the HTML5 specification, as well as a few deprecated elements for your legacy sites.")
                                                    }

                                                    span("Here are some other useful features of HTMLDSL4K, most of these features are a WIP and are incomplete.")
                                                    ul {
                                                        li {
                                                            span("Element lambdas will only allow you to add elements that are allowed within that element.")
                                                        }

                                                        li {
                                                            span {
                                                                text("Attributes relevant to an element will be available as a field in that element. For example, ")
                                                                code("href")
                                                                text(" is available for the AnchorElement but not available by field in the ImageElement, although if desired, and with any attribute, it can be set with ")
                                                                code("setAttribute(\"href\",&nbsp;\"your&nbsp;attribute&nbsp;value\")")
                                                                text(".")
                                                            }
                                                        }

                                                        li {
                                                            span("Easily extend this library with your own elements using Kotlin extension functions and the library's attribute and element providers.")
                                                        }

                                                        li {
                                                            span("Use HTMLDSL4K template function for generating blocks of elements to be passed as a single template block.")
                                                        }
                                                    }

                                                    span {
                                                        text("It can even do onclick attributes with scripts embedded in the page. ")
                                                        a(className = "text-primary") {
                                                            text("Like so")

                                                            this.href = "#"
                                                            this["onclick"] = "testAlert();"
                                                        }
                                                        text(".")
                                                    }

                                                    //end-recursion//
                                                }
                                            }
                                            ""${'"'}.trimIndent())
                                }
                            }
                            """.trimIndent())
                            }
                        }
                    }
                }
            }
    ).also { html ->
        if (Desktop.isDesktopSupported()) {
            FileWriter(File("sample.html"), false).also {
                it.write(html)
                it.flush()
                it.close()
            }

            File("sample.html").also {
                Desktop.getDesktop().browse(it.toURI())
            }
        }
    }
}